const {services} = require("../ServiceRegistry");

const regulation = {
    ru: `Это соревнования на время, по трассе, размеченной конусами! Пилот начинает со стартовой площадки, проезжает всю трассу и заканчивает на финишной площадке.  Время заезда определяется с помощью устройства lap timer. 
Проезд по трассе полностью снимается на видео. 
Правила:
- участник должн выставить схему по указанным размерам на подходящей площадке.
- высота конусов 45 сантиметров. Можно использовать конусы меньшего размера (не меньше 30 сантиметров), но за это назначайся штраф. 
- во время старта мотоцикл должен стоять в пределах стартовой площадки.
- во время заезда пилот не должен прикасаться к конусам (мотоциклом или телом).
- во время заезда пилот не может наступать ногой на землю.
- на финише пилот должен полностью остановиться в пределах финишной площадки.
- сенсор устройства (Lap Timer) для учета времени заезда должен быть установлен четко на линии старта.
Штрафы за нарушение правил: 
- 1 секунда если высота конусов меньше 45 сантиметров.
- 3 секунды если мотоцикл во время старта был за пределами стартовой площадки.
- 3 секунды если на видео не видно стартовой площадки когда пилот стартует.
- 3 секунды если на видео не видно финишной площадки когда пилот финиширует и останавливается.
- 1 секунда за прикосновение (мотоцилом или телом) к конусу. 
- 1 секунда за отталкивание ногой от земли.
- 3 секунды за несколько прикосновений ногой или ногами к земле в маленьком промежутке времени.
- 3 секунды за остановку вне финишной площадки. 
Результат не принимается если:
- Высота конусов меньше 30 сантиметров.
- На видео не заснят старт мотоцикла из состояния стояния.
- На видео не заснят проезд пилотом всех участков трассы.
- На видео не заснят финиш с полной остановка мотоцикла.
- Пилот не правильно проехал трассу.
- автор (организатор соревнования) трассы может решить не принимать результат, в таком случае автор (организатор соревнования) обязан написать причину отклонения результата.
`,
    en: 'fack'
};

const regulationChampionship = {
    ru: 'Чемпионат - online',
    en: 'Championship - online',
    ua: 'Championship - online'
}

const crateDefaultModels = async () => {
    const db = await services.get('db').getDB();

    if (db) {
        console.log('db is connected');

        const typescompetitions = await db.collection('typescompetitions');

        if (typescompetitions.count() === 0) {
            console.log('typescompetitions is empty');

            await typescompetitions.insertMany([
                {
                    name: 'Time Attack - online',
                    regulation
                }, {
                    name: 'Championship - online',
                    regulation: regulationChampionship
                }
            ]);
        }
    }
}

module.exports = {crateDefaultModels}

